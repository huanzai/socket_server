#include "net_socket.h"

#define MAX_EVENTS 64

struct socket {
	int fd;
};

struct event {
	struct socket *s;
	int is_write;
	int is_read;
};

struct socket_server {
	int efd;
	int read_fd;
	int write_fd;
	int ctrl_index;
	int ctrl_size;
	struct event ctrl_ev[MAX_EVENTS];
};

struct socket_server*
socket_server_create() {
	int r,i;
	
	struct socket_server *ss = malloc(sizeof(*s));
	memset(ss, 0, sizeof(*ss));

	ss->efd = sp_create(MAX_EVENTS);
	if (ss->efd == -1) {
		perror("sp_create");
		exit(1);
	}

	int fd[2];
	r = pipe(fd);
	if (r == -1) {
		perror("pipe");
		exit(1);
	}

	ss->read_fd 	= fd[0];
	ss->write_fd 	= fd[1];

	ss->ctrl_index  = 0;
	for (i = 0; i < MAX_EVENTS; i++) {
		ss->ctrl_ev[i].s = NULL;
	}
	
}

void 
socket_server_poll() {
	

}
